digraph CFG {
node [shape=box, style=filled, color=lightgray];
Start [shape=oval, color=lightblue, label="Start"];
End [shape=oval, color=lightblue, label="End"];
B0 [label="B0:
#include \<stdio.h\>
#define MAX 100"];
B1 [label="B1:
void bubbleSort(int arr[], int n) \{"];
B2 [label="B2:
for (int i = 0; i \< n - 1; i++) \{"];
B3 [label="B3:
for (int j = 0; j \< n - i - 1; j++) \{"];
B4 [label="B4:
if (arr[j] \> arr[j + 1]) \{"];
B5 [label="B5:
int temp = arr[j];
arr[j] = arr[j + 1];
arr[j + 1] = temp;"];
B6 [label="B6:
void insertionSort(int arr[], int n) \{"];
B7 [label="B7:
for (int i = 1; i \< n; i++) \{"];
B8 [label="B8:
int key = arr[i];
int j = i - 1;"];
B9 [label="B9:
while (j \>= 0 && arr[j] \> key) \{"];
B10 [label="B10:
arr[j + 1] = arr[j];
j--;
arr[j + 1] = key;"];
B11 [label="B11:
int binarySearch(int arr[], int n, int target) \{"];
B12 [label="B12:
int low = 0, high = n - 1;"];
B13 [label="B13:
while (low \<= high) \{"];
B14 [label="B14:
int mid = (low + high) / 2;"];
B15 [label="B15:
if (arr[mid] == target)"];
B16 [label="B16:
return mid;"];
B17 [label="B17:
else if (arr[mid] \< target)"];
B18 [label="B18:
low = mid + 1;"];
B19 [label="B19:
else"];
B20 [label="B20:
high = mid - 1;
return -1;"];
B21 [label="B21:
void display(int arr[], int n) \{"];
B22 [label="B22:
for (int i = 0; i \< n; i++)"];
B23 [label="B23:
printf(\"%d \", arr[i]);
printf(\"\\n\");"];
B24 [label="B24:
int main() \{"];
B25 [label="B25:
int arr[MAX], n, choice, target;
printf(\"Enter number of elements (\<=100): \");
scanf(\"%d\", &n);"];
B26 [label="B26:
if (n \<= 0 || n \> MAX) \{"];
B27 [label="B27:
printf(\"Invalid size.\\n\");
return 0;"];
B28 [label="B28:
printf(\"Enter %d elements:\\n\", n);"];
B29 [label="B29:
for (int i = 0; i \< n; i++) \{"];
B30 [label="B30:
scanf(\"%d\", &arr[i]);"];
B31 [label="B31:
while (1) \{"];
B32 [label="B32:
printf(\"\\nMenu:\\n1. Bubble Sort\\n2. Insertion Sort\\n3. Binary Search\\n4. Display\\n5. Exit\\nEnter choice: \");
scanf(\"%d\", &choice);"];
B33 [label="B33:
if (choice == 1) \{"];
B34 [label="B34:
bubbleSort(arr, n);
printf(\"Array sorted using Bubble Sort.\\n\");"];
B35 [label="B35:
\} else if (choice == 2) \{"];
B36 [label="B36:
insertionSort(arr, n);
printf(\"Array sorted using Insertion Sort.\\n\");"];
B37 [label="B37:
\} else if (choice == 3) \{"];
B38 [label="B38:
printf(\"Enter element to search: \");
scanf(\"%d\", &target);
int index = binarySearch(arr, n, target);"];
B39 [label="B39:
if (index != -1)"];
B40 [label="B40:
printf(\"Element found at index %d\\n\", index);"];
B41 [label="B41:
else"];
B42 [label="B42:
printf(\"Element not found.\\n\");"];
B43 [label="B43:
\} else if (choice == 4) \{"];
B44 [label="B44:
display(arr, n);"];
B45 [label="B45:
\} else if (choice == 5) \{"];
B46 [label="B46:
printf(\"Exiting program.\\n\");
break;"];
B47 [label="B47:
\} else \{"];
B48 [label="B48:
printf(\"Invalid choice.\\n\");
return 0;"];
Start -> B0;
B47 -> B48;
B10 -> B9 [label="back"];
B41 -> B42;
B44 -> B45;
B29 -> B31 [label="false (exit)"];
B13 -> B15 [label="false (exit)"];
B42 -> B43;
B39 -> B40 [label="true"];
B11 -> B12;
B29 -> B30 [label="true"];
B33 -> B35 [label="false"];
B39 -> B41 [label="false"];
B32 -> B33;
B2 -> B3 [label="true"];
B38 -> B39;
B22 -> B24 [label="false (exit)"];
B23 -> B24;
B31 -> B33 [label="false (exit)"];
B8 -> B7 [label="back"];
B17 -> B18 [label="true"];
B26 -> B28 [label="false"];
B37 -> B39 [label="false"];
B14 -> B13 [label="back"];
B1 -> B2;
B6 -> B7;
B35 -> B37 [label="false"];
B35 -> B36 [label="true"];
B7 -> B8 [label="true"];
B3 -> B2 [label="back"];
B18 -> B19;
B9 -> B11 [label="false (exit)"];
B8 -> B9;
B19 -> B20;
B32 -> B31 [label="back"];
B13 -> B14 [label="true"];
B30 -> B31;
B26 -> B27 [label="true"];
B34 -> B35;
B3 -> B5 [label="false (exit)"];
B23 -> B22 [label="back"];
B36 -> B37;
B3 -> B4 [label="true"];
B40 -> B41;
B43 -> B44 [label="true"];
B17 -> B19 [label="false"];
B4 -> B3 [label="back"];
B14 -> B15;
B15 -> B17 [label="false"];
B7 -> B9 [label="false (exit)"];
B10 -> B11;
B43 -> B45 [label="false"];
B4 -> B6 [label="false"];
B15 -> B16 [label="true"];
B25 -> B26;
B2 -> B4 [label="false (exit)"];
B31 -> B32 [label="true"];
B4 -> B5 [label="true"];
B22 -> B23 [label="true"];
B45 -> B47 [label="false"];
B37 -> B38 [label="true"];
B46 -> B47;
B21 -> B22;
B45 -> B46 [label="true"];
B12 -> B13;
B24 -> B25;
B30 -> B29 [label="back"];
B9 -> B10 [label="true"];
B0 -> B1;
B28 -> B29;
B33 -> B34 [label="true"];
B5 -> B6;
B16 -> End;
B20 -> End;
B27 -> End;
B46 -> End;
B48 -> End;
}
