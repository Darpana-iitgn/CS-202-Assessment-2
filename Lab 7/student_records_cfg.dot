digraph CFG {
node [shape=box, style=filled, color=lightgray];
Start [shape=oval, color=lightblue, label="Start"];
End [shape=oval, color=lightblue, label="End"];
B0 [label="B0:
#include \<stdio.h\>
#include \<string.h\>
#define MAX 50
#define SUBJECTS 5"];
B1 [label="B1:
typedef struct \{"];
B2 [label="B2:
char name[30];
int marks[SUBJECTS];
float avg;
char grade;"];
B3 [label="B3:
\} Student;"];
B4 [label="B4:
float calcAverage(int marks[]) \{"];
B5 [label="B5:
int sum = 0;"];
B6 [label="B6:
for (int i = 0; i \< SUBJECTS; i++)"];
B7 [label="B7:
sum += marks[i];
return sum / (float)SUBJECTS;"];
B8 [label="B8:
char assignGrade(float avg) \{"];
B9 [label="B9:
if (avg \>= 90) return 'A';"];
B10 [label="B10:
else if (avg \>= 75) return 'B';"];
B11 [label="B11:
else if (avg \>= 60) return 'C';"];
B12 [label="B12:
else if (avg \>= 40) return 'D';"];
B13 [label="B13:
else return 'F';"];
B14 [label="B14:
void inputStudent(Student *s) \{"];
B15 [label="B15:
printf(\"Enter student name: \");
scanf(\"%s\", s-\>name);
printf(\"Enter marks in %d subjects: \", SUBJECTS);"];
B16 [label="B16:
for (int i = 0; i \< SUBJECTS; i++)"];
B17 [label="B17:
scanf(\"%d\", &s-\>marks[i]);
s-\>avg = calcAverage(s-\>marks);
s-\>grade = assignGrade(s-\>avg);"];
B18 [label="B18:
void printStudent(Student s) \{"];
B19 [label="B19:
printf(\"%-15s  \", s.name);
printf(\"Avg: %6.2f  Grade: %c\\n\", s.avg, s.grade);"];
B20 [label="B20:
void displayAll(Student s[], int n) \{"];
B21 [label="B21:
printf(\"\\n%-15s  %-10s  %-10s\\n\", \"Name\", \"Average\", \"Grade\");
printf(\"-------------------------------------\\n\");"];
B22 [label="B22:
for (int i = 0; i \< n; i++)"];
B23 [label="B23:
printf(\"%-15s  %8.2f  %5c\\n\", s[i].name, s[i].avg, s[i].grade);"];
B24 [label="B24:
int findStudentIndex(Student s[], int n, char name[]) \{"];
B25 [label="B25:
for (int i = 0; i \< n; i++) \{"];
B26 [label="B26:
if (strcmp(s[i].name, name) == 0)"];
B27 [label="B27:
return i;"];
B28 [label="B28:
return -1;"];
B29 [label="B29:
void updateMarks(Student s[], int n) \{"];
B30 [label="B30:
char name[30];
printf(\"Enter name to update marks: \");
scanf(\"%s\", name);
int idx = findStudentIndex(s, n, name);"];
B31 [label="B31:
if (idx == -1) \{"];
B32 [label="B32:
printf(\"Student not found!\\n\");
return;"];
B33 [label="B33:
printf(\"Enter new marks for %s:\\n\", s[idx].name);"];
B34 [label="B34:
for (int i = 0; i \< SUBJECTS; i++)"];
B35 [label="B35:
scanf(\"%d\", &s[idx].marks[i]);
s[idx].avg = calcAverage(s[idx].marks);
s[idx].grade = assignGrade(s[idx].avg);
printf(\"Marks updated successfully.\\n\");"];
B36 [label="B36:
void deleteStudent(Student s[], int *n) \{"];
B37 [label="B37:
char name[30];
printf(\"Enter name to delete: \");
scanf(\"%s\", name);
int idx = findStudentIndex(s, *n, name);"];
B38 [label="B38:
if (idx == -1) \{"];
B39 [label="B39:
printf(\"Student not found!\\n\");
return;"];
B40 [label="B40:
for (int i = idx; i \< *n - 1; i++) \{"];
B41 [label="B41:
s[i] = s[i + 1];
(*n)--;
printf(\"Record deleted successfully.\\n\");"];
B42 [label="B42:
void sortStudents(Student s[], int n) \{"];
B43 [label="B43:
for (int i = 0; i \< n - 1; i++) \{"];
B44 [label="B44:
for (int j = 0; j \< n - i - 1; j++) \{"];
B45 [label="B45:
if (s[j].avg \< s[j + 1].avg) \{"];
B46 [label="B46:
Student temp = s[j];
s[j] = s[j + 1];
s[j + 1] = temp;
printf(\"Students sorted by average (descending).\\n\");"];
B47 [label="B47:
void topPerformers(Student s[], int n) \{"];
B48 [label="B48:
if (n == 0) \{"];
B49 [label="B49:
printf(\"No student records.\\n\");
return;"];
B50 [label="B50:
sortStudents(s, n);
int limit = (n \>= 3) ? 3 : n;
printf(\"\\nTop %d Performers:\\n\", limit);"];
B51 [label="B51:
for (int i = 0; i \< limit; i++)"];
B52 [label="B52:
printStudent(s[i]);"];
B53 [label="B53:
float classAverage(Student s[], int n) \{"];
B54 [label="B54:
float total = 0.0;"];
B55 [label="B55:
for (int i = 0; i \< n; i++)"];
B56 [label="B56:
total += s[i].avg;
return (n \> 0) ? total / n : 0.0;"];
B57 [label="B57:
int main() \{"];
B58 [label="B58:
Student s[MAX];
int n = 0, choice;
float highest = 0.0;
char topStudent[30];"];
B59 [label="B59:
while (1) \{"];
B60 [label="B60:
printf(\"\\n==== STUDENT RECORD SYSTEM ====\\n\");
printf(\"1. Add New Student\\n\");
printf(\"2. Display All Students\\n\");
printf(\"3. Update Marks\\n\");
printf(\"4. Delete Student\\n\");
printf(\"5. Sort by Average\\n\");
printf(\"6. Top Performers\\n\");
printf(\"7. Search Student\\n\");
printf(\"8. Show Class Stats\\n\");
printf(\"9. Exit\\n\");
printf(\"Enter your choice: \");
scanf(\"%d\", &choice);"];
B61 [label="B61:
if (choice == 1) \{"];
B62 [label="B62:
if (n \>= MAX) \{"];
B63 [label="B63:
printf(\"Maximum student limit reached.\\n\");"];
B64 [label="B64:
\} else \{"];
B65 [label="B65:
inputStudent(&s[n]);
n++;
printf(\"Student added successfully.\\n\");"];
B66 [label="B66:
\} else if (choice == 2) \{"];
B67 [label="B67:
if (n == 0)"];
B68 [label="B68:
printf(\"No records to display.\\n\");"];
B69 [label="B69:
else"];
B70 [label="B70:
displayAll(s, n);"];
B71 [label="B71:
\} else if (choice == 3) \{"];
B72 [label="B72:
updateMarks(s, n);"];
B73 [label="B73:
\} else if (choice == 4) \{"];
B74 [label="B74:
deleteStudent(s, &n);"];
B75 [label="B75:
\} else if (choice == 5) \{"];
B76 [label="B76:
if (n \> 1)"];
B77 [label="B77:
sortStudents(s, n);"];
B78 [label="B78:
else"];
B79 [label="B79:
printf(\"Not enough students to sort.\\n\");"];
B80 [label="B80:
\} else if (choice == 6) \{"];
B81 [label="B81:
topPerformers(s, n);"];
B82 [label="B82:
\} else if (choice == 7) \{"];
B83 [label="B83:
char search[30];
printf(\"Enter name to search: \");
scanf(\"%s\", search);
int idx = findStudentIndex(s, n, search);"];
B84 [label="B84:
if (idx != -1)"];
B85 [label="B85:
printStudent(s[idx]);"];
B86 [label="B86:
else"];
B87 [label="B87:
printf(\"Student not found.\\n\");"];
B88 [label="B88:
\} else if (choice == 8) \{"];
B89 [label="B89:
if (n == 0) \{"];
B90 [label="B90:
printf(\"No students yet.\\n\");"];
B91 [label="B91:
\} else \{"];
B92 [label="B92:
float avg = classAverage(s, n);
int pass = 0, fail = 0;"];
B93 [label="B93:
for (int i = 0; i \< n; i++) \{"];
B94 [label="B94:
if (s[i].grade == 'F')"];
B95 [label="B95:
fail++;"];
B96 [label="B96:
else"];
B97 [label="B97:
pass++;
printf(\"\\nClass Average: %.2f\\nPassed: %d | Failed: %d\\n\", avg, pass, fail);
highest = 0.0;"];
B98 [label="B98:
for (int i = 0; i \< n; i++) \{"];
B99 [label="B99:
if (s[i].avg \> highest) \{"];
B100 [label="B100:
highest = s[i].avg;
strcpy(topStudent, s[i].name);
printf(\"Top Student: %s (%.2f)\\n\", topStudent, highest);"];
B101 [label="B101:
\} else if (choice == 9) \{"];
B102 [label="B102:
printf(\"Exiting program...\\n\");
break;"];
B103 [label="B103:
\} else \{"];
B104 [label="B104:
printf(\"Invalid choice, try again.\\n\");
return 0;"];
Start -> B0;
B29 -> B30;
B86 -> B87;
B44 -> B45 [label="true"];
B75 -> B76 [label="true"];
B89 -> B91 [label="false"];
B0 -> B1;
B73 -> B75 [label="false"];
B68 -> B69;
B88 -> B90 [label="false"];
B31 -> B33 [label="false"];
B92 -> B93;
B98 -> B100 [label="false (exit)"];
B17 -> B18;
B14 -> B15;
B94 -> B95 [label="true"];
B88 -> B89 [label="true"];
B64 -> B65;
B99 -> B101 [label="false"];
B94 -> B96 [label="false"];
B62 -> B63 [label="true"];
B71 -> B72 [label="true"];
B21 -> B22;
B80 -> B81 [label="true"];
B9 -> B10 [label="true"];
B44 -> B46 [label="false (exit)"];
B52 -> B51 [label="back"];
B66 -> B67 [label="true"];
B74 -> B75;
B16 -> B18 [label="false (exit)"];
B59 -> B60 [label="true"];
B38 -> B40 [label="false"];
B66 -> B68 [label="false"];
B1 -> B2;
B82 -> B84 [label="false"];
B33 -> B34 [label="true"];
B22 -> B24 [label="false (exit)"];
B55 -> B57 [label="false (exit)"];
B100 -> B101;
B9 -> B11 [label="false"];
B40 -> B41 [label="true"];
B75 -> B77 [label="false"];
B69 -> B70;
B12 -> B13 [label="true"];
B80 -> B82 [label="false"];
B82 -> B81 [label="back"];
B47 -> B49 [label="false (exit)"];
B11 -> B13 [label="false"];
B81 -> B82 [label="true"];
B89 -> B90 [label="true"];
B12 -> B14 [label="false"];
B54 -> B55;
B56 -> B55 [label="back"];
B70 -> B71;
B58 -> B59;
B41 -> B42;
B63 -> B64;
B103 -> B104;
B94 -> B93 [label="back"];
B93 -> B95 [label="false (exit)"];
B51 -> B50 [label="back"];
B15 -> B16;
B18 -> B19;
B61 -> B62 [label="true"];
B47 -> B48 [label="true"];
B4 -> B5;
B26 -> B27 [label="true"];
B84 -> B86 [label="false"];
B30 -> B31;
B45 -> B46 [label="true"];
B33 -> B35 [label="false (exit)"];
B57 -> B58;
B95 -> B96;
B34 -> B33 [label="back"];
B34 -> B36 [label="false (exit)"];
B62 -> B64 [label="false"];
B97 -> B98;
B13 -> B14;
B41 -> B40 [label="back"];
B10 -> B12 [label="false"];
B26 -> B28 [label="false"];
B85 -> B86;
B44 -> B43 [label="back"];
B51 -> B53 [label="false (exit)"];
B61 -> B60 [label="back"];
B55 -> B56 [label="true"];
B83 -> B84;
B48 -> B47 [label="back"];
B46 -> B47;
B34 -> B35 [label="true"];
B71 -> B73 [label="false"];
B22 -> B23 [label="true"];
B90 -> B91;
B31 -> B32 [label="true"];
B10 -> B11 [label="true"];
B60 -> B62 [label="false (exit)"];
B43 -> B45 [label="false (exit)"];
B102 -> B103;
B6 -> B7 [label="true"];
B45 -> B47 [label="false"];
B79 -> B80;
B60 -> B61 [label="true"];
B38 -> B39 [label="true"];
B17 -> B16 [label="back"];
B98 -> B99 [label="true"];
B67 -> B68 [label="true"];
B91 -> B92;
B20 -> B21;
B42 -> B43;
B84 -> B85 [label="true"];
B67 -> B69 [label="false"];
B99 -> B100 [label="true"];
B93 -> B94 [label="true"];
B50 -> B51 [label="true"];
B40 -> B42 [label="false (exit)"];
B73 -> B74 [label="true"];
B5 -> B6;
B101 -> B102 [label="true"];
B52 -> B53;
B23 -> B24;
B35 -> B36;
B24 -> B25;
B11 -> B12 [label="true"];
B77 -> B78;
B51 -> B52 [label="true"];
B50 -> B52 [label="false (exit)"];
B61 -> B63 [label="false"];
B81 -> B83 [label="false (exit)"];
B16 -> B17 [label="true"];
B48 -> B50 [label="false"];
B23 -> B22 [label="back"];
B76 -> B77 [label="true"];
B6 -> B8 [label="false (exit)"];
B76 -> B78 [label="false"];
B25 -> B27 [label="false (exit)"];
B65 -> B66;
B35 -> B34 [label="back"];
B99 -> B98 [label="back"];
B7 -> B6 [label="back"];
B78 -> B79;
B48 -> B49 [label="true"];
B82 -> B83 [label="true"];
B60 -> B59 [label="back"];
B19 -> B20;
B25 -> B26 [label="true"];
B53 -> B54;
B72 -> B73;
B87 -> B88;
B36 -> B37;
B96 -> B97;
B8 -> B9;
B59 -> B61 [label="false (exit)"];
B43 -> B44 [label="true"];
B2 -> B3;
B45 -> B44 [label="back"];
B101 -> B103 [label="false"];
B3 -> B4;
B26 -> B25 [label="back"];
B37 -> B38;
B7 -> End;
B9 -> End;
B10 -> End;
B11 -> End;
B12 -> End;
B13 -> End;
B27 -> End;
B28 -> End;
B32 -> End;
B39 -> End;
B49 -> End;
B56 -> End;
B102 -> End;
B104 -> End;
}
